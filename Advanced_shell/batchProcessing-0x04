#!/bin/bash

# Ensure output directory exists
mkdir -p pokemon_data

# Pokémon list
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch data for one Pokémon (with retry logic)
fetch_pokemon() {
    local pokemon=$1
    local attempts=0
    local max_retries=3
    local success=false

    while [ $attempts -lt $max_retries ]; do
        response=$(curl -s -w "%{http_code}" -o "pokemon_data/${pokemon}.json" "https://pokeapi.co/api/v2/pokemon/${pokemon}")
        http_status="${response: -3}"

        if [ "$http_status" -eq 200 ]; then
            echo "$pokemon ✅ (attempt $((attempts + 1)))"
            success=true
            break
        else
            echo "$pokemon ❌ (attempt $((attempts + 1)))"
            ((attempts++))
            sleep 2
        fi
    done

    if [ "$success" = false ]; then
        echo "[ERROR] Could not retrieve $pokemon after $max_retries attempts." >> errors.txt
        rm -f "pokemon_data/${pokemon}.json"
    fi
}

# Launch fetches in parallel
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon "$pokemon" &
done

# Wait for all background processes to finish
wait

echo -e "\n✅ All Pokémon data fetched (or retried)."

